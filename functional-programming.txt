Introduction
-----------------------------------------------------------------------------------------------------------------------------------------
After years of dragging my feet I've been learning Haskell with the help of a few friends. Many Haskell concepts can be quite daunting so 
I decided to write one sentence summaries to simplify them for myself. These are not by any means complete but are useful as a jumping off
 point. This post draws inspiration from hemanth/functional-programming-jargon and the Standardized Ladder of Functional Programming.

Concepts
-----------------------------------------------------------------------------------------------------------------------------------------
A monad is composed of three functions and encodes control flow which allows pure functions to be strung together.

A recursive function is a function that calls itself inside its own definition.

A monad transformer allows you to stack more than one monad for use in a function.

Lift is an operation on a functor that uses fmap to operate on the data contained in the functor.

Optics(lens and prisms) allow you to get and set data in a data type.

Currying uses partial application to return a function until all arguments are filled.

Map applies a function to every element of a list.

A predicate is a function that returns true or false.

Filter applies a predicate to a list and returns only elements which return true.

Pure functions always return the same output for a given input regardless of environment and cause no side effects.

A lambda is an unnamed function.

Lazy evaluation only evaluates expressions that your program actually uses.

Fold applies a function between elements of a list.

A morphism is a transformation from any object to any other object.

A category is a collection of objects, morphisms, and the configuration of the morphisms.

Functors are objects that can be fmaped over.

Types are an inherent characteristic of every Haskell expression.

Type classes are similar to OOP interfaces.

Algebraic data types are a method to describe the structure of types.

Parametric polymorphism allows generic type variables in place of types in the type signature of a function.

A monoid is a type with a single operation for combining values.

Free monads allow the transformation of functors to monads.
-----------------------------------------------------------------------------------------------------------------------------------------

rxjs;intro to rxjs; ts; functional programming; "https://www.youtube.com/watch?v=RgkmD3JSCdI&t=377s" 
rxjs;rxjs breakout game; manuel wieser;https://manu.ninja/ffunctional-reactive-game-programming-rxjs-breakout 
functional js;github repo; james moore; knowthen.com; https://github.com/knowthen/fpjs 
functional;Functional and Algebraic Domain Modeling;https://www.youtube.com/watch?v=BskNvfNjU_8 
domain modeling;C;\Users\Folio\Downloads\F# Books\domain-modeling-made-functional.pdf 
functional;anton sutarmin;;https://github.com/sutarmin/balls-n-bricks/tree/master/src 
Functional; Functional design series; giulio canti; https://dev.to/gcanti/functional-design-combinators-14pn 
typscript;unctional ts; isher; https://github.com/transitive-bullshit/functional-typescript 
typscript;unctional ts; isher;https://github.com/transitive-bullshit/functional-typescript 
ts;unctional; giulio canti; https://dev.to/gcanti/interoperability-with-non-functional-code-using-fp-ts-432e 
adt;maybe in react;; https://dev.to/vageez/maybe-functional-programming-in-javascript-4bln 
ts; functional programming; "https://deepu.tech/functional-programming-in-typescript/" 
ts; functional programming;https://github.com/deepu105 
hans;learn; E;\_downloads\_fe\_js\Javascriot Functional Programming in JavaScript Pluralsight - Hardcore\mastering-web-app-functional 
haskell;erik meijer; 	functional programming;ytl;https://www.youtube.com/playlist?list=PLX15ZXZzrWp5l1WkN5VkhmrbVp_ybNFRZ 
fp-ts;			https://dev.to/gcanti/functional-design-combinators-14pn 
hans;learn; 		video zwoel; E;\A10-projects\__learn\Javascript\Functional-Programming\learning-functional-programming-javascript-es6\_videos 
fp; functional toolkit; scott wlaschin; https://www.youtube.com/watch?v=bK-Tz-GLfOs
hans;learn; 		E;\_downloads\_fe\_js\javascript functional-programming-beginners-javascript 
hans;learn; 		E;\_downloads\_fe\_js\Functional-Javascript\learn-write-functional-javascript 
fp;domain modeling; 	scott wlaschin; C;\Users\Folio\Downloads\F# Books\domain-modeling-made-functional.pdf 
book;js unctional; 	louis atenico; https://github.com/luijar/functional-programming-js/tree/master/src 
ramda;;			https://www.udemy.com/course/learning-functional-javascript-with-ramda/ 
ramda;tic-tac-toe game; https://github.com/tmrovsky/functional-ramda-react-tic-tac-toe 
fp;links;		https://libraries.io/github/rgordeev/awesome-functional-programming 
functional;di-in-fp;     functional;di-in-fp https://dev.to/psfeng/dependency-injection-in-functional-programming-3gg4 
p-web;          p-web; https://github.com/miloszpp/functional-climbs  
fp-web;          fp-web; functional web programming for beginners; knowthen.com; james moore; E;\_downloads\_fe\_js\javascript functional-programming-beginners-javascript  
temperature-converter;  temperature-converter; in functional programming style  
fp; 			E;\_downloads\_fe\_js\javascript functional-programming-beginners-javascript\10  Tip Calculator Application  
ramda;article;          ramda;article; https://amido.com/blog/functional-programming-ramda/  
ramda;Code;          	ramda;Code; https://github.com/leggechr/functional-programming-with-ramda  
ramda;Tutorial;          ramda;Tutorial; online; interactive; https://www.educative.io/courses/functional-programming-patterns-with-ramdajs/gkX11zo0nkY  
js-un-workshop;          js-un-workshop; tomasz ducin; https://github.com/ducin/functional-javascript-workshop.git  
hans;          hans; c;\Users\Folio\web\frontend\javascript\functional\tomasz-ducin\functional-javascript-workshop  
hans-chapter-5;          hans-chapter-5; E;\_downloads\_fe\_js\Functional-Javascript\functional-programming-javascript-video  
ramda-hands-on;          ramda-hands-on; https://www.sitepoint.com/functional-programming-with-ramda/  
ramda-redux;          ramda-redux; article;https://alligator.io/redux/functional-redux-reducers-with-ramda/  
js-snake;          js-snake;          js-snake;https://www.freecodecamp.org/news/how-to-code-the-classic-game-snake-and-play-it-in-your-browser-using-functional-javascript-a-full-tutorial/  
hans;          hans; E;\_downloads\_fe\_js\Functional-Javascript\_books\functional-reactive-programming  
hans;          hans; E;\_downloads\_fe\_js\Functional-Javascript\_books\learning-react-functional-dev-redux-alex-banks-eve-porcello  
hans; E;\_downloads\_fe\_ts\learn-write-functional-javascript-michael-rosata-packtpub  
js-functional-programming;      luis atenico; https://livebook.manning.com/book/functional-programming  
js-p series;  	https://medium.com/@cscalfani/so-you-want-to-be-a-functional-programmer-part-1-1f15e387e536  
ramda-tutorial;    	https://www.educative.io/courses/functional-programming-patterns-with-ramdajs/gkX11zo0nkY  
frp-expert       	pataj gergeley; functional reactive programming  
typescript-expert;      giulio canti; "https://dev.to/gcanti/functional-design-combinators-14pn?utm_source=dormosheio&utm_campaign=dormosheio"  
typescript-adt;         https://dev.to/gcanti/functional-design-algebraic-data-types-36kf  
scott wlaschin;       domain modeling made functional; https://www.youtube.com/watch?v=PLFl95c-IiU
scott wlaschin;       domain modeling made functional; E;\_downloads\_fe\sharp\domain-modeling-made-functional
reactive-programming;   where does it it; https://www.webonise.com/reactive-programming-a-step-ahead-of-functional-programming/  
snake-game;               	javascript vunctional; https://github.com/Raagh/functional-snake-game.git  
snake-game;               	javascript vunctional; https://dev.to/patferraggi/build-a-snake-game-in-functional-javascript-part-1-2cnh  
rxjs-timer;              	netta bondy; tikal; https://hero35.com/js-kongress/2019/dissecting-a-completely-functional-reactive-javascript-app 
react-functional;          	architecture; https://github.com/cristi-salcescu/functional-architecture-with-react-and-redux 
react-functional;          	christian salescu; https://www.freecodecamp.org/news/a-few-questions-on-functional-components/ 
react-state;               	blog article; https://medium.com/@rajeshnaroth/component-state-management-in-react-functional-components-with-hooks-e7c412c05e71 
react-typescript;           	generic functional component; https://wanago.io/2020/03/09/functional-react-components-with-generic-props-in-typescript/ 
react-typescript;          	expert; https://levelup.gitconnected.com/using-react-functional-components-with-hooks-in-typescript-6d61075edddc 
typescript-expert;            	functional typescript; marcel rusu; 
typescrit-expert;          	giulio canti; https://dev.to/gcanti/functional-design-combinators-14pn 
typescript-expert,             	giovanni gonzaga, typescript functional, https://github.com/giogonzo/ts-conf-talk 
javascript-functional,        	code with gio, ytl javascript functional with Ramda, https://www.youtube.com/playlist?list=PLa_W0QyB2915fPj4LqViPQK9rpdC2E1c8
typescript-functional,      	dsl in typescript, yt video, "https://www.youtube.com/watch?v=hTnxaB52awA&feature=emb_logo" 
typescript-functional,      	dsl in typescript, yt video, https://github.com/YBogomolov/workshop-edsl-in-typescript 
typescript-functional,     	timothy clifford, functional typescript, https://github.com/timothyclifford/purifying-typescript 
typescript-functional,
typescript-functional,       youtube list , functional typescript, "https://www.youtube.com/watch?v=4EvzdIA-yD4&list=PL3g439-h6tRKqCGj898Nthe8E-fsHqPwt"  
typescript-functional,       https://www.typescriptlang.org/docs/handbook/typescript-in-5-minutes-func.html  
typescript-functional,       remo h jansen, books on packtpub, https://docs.google.com/presentation/d/1LNGqJqAjnbk2ZXNyOuISvkT_2dYvOFSoPltMVl1TTaM/present?slide=id.g46e90a2625_0_0  
typescript-functional,       https://hvalls.dev/posts/intro-functional-fpts  
functional-programming,      scott wlaschin, functional toolkit, fsharpforfunandprofit.com/fptoolkit
javascript-functional,       https://github.com/busypeoples/functional-programming-javascript.git  
typescript-functional,       dimitris papadimitriou, book, https://leanpub.com/functional-programming-in-Ts-with-categories
typescript-functional,       dimitris papadimitriou, book,https://github.com/dimitris-papadimitriou-chr/Functional-TS-With-Categoriesfuntional-programming, online, https://www.typescriptlang.org/docs/handbook/typescript-in-5-minutes-func.html  
typescript-functional,       leanpub book, Dimitris papadimitriou 2020 - Functional Programming in TypeScript with Categories 
typescript-functional,  functionaly types in ts, https://artsy.github.io/blog/2018/11/21/conditional-types-in-typescript/ 
functional-programming,  giulio canti, functional design dev.to blog series, https://dev.to/gcanti/functional-design-algebraic-data-types-36kf
typescript-adt,         https://www.derrickbeining.com/2019/05/30/adventures-in-statically-typed-functional-programming-algebraic-data-types/ 
typeScript-for-functional-programmers.txt,         file 
typescript-expert,         blog.carbonfive.com,     typescript functional, https://blog.carbonfive.com/an-introduction-to-adts-and-structural-pattern-matching-in-typescript/ 
javascript-functional,     online course, https://www.fluidinfunctional.com/jscourse/docs/course/1.introduction/2.basic%20type%20theory 
javascript-functional,  federico kereki, mastering functional programming, https://github.com/fkereki/fkJS.git 
javascript-functional,  federico kereki, mastering functional programming, https://github.com/fkereki/ai-js-extract.git 
functional-programming,   what is a monad, bartosz milewski, yt
typescript-functional,    christian di lorenzo, https://github.com/rcdilorenzo/news.git 
typescript-functional,    christian di lorenzo, "https://www.youtube.com/watch?v=tmVk_4oRL-Y&list=PLw5h0DiJ-9PDivxBt_4Qko3gB1sFJuWOj&index=1" 
functional-typescript,    travis fischer, https://github.com/transitive-bullshit/functional-typescript 
functional-typescript,    travis fischer, "https://www.youtube.com/watch?v=7LMSek0_6A0&list=PLw5h0DiJ-9PDivxBt_4Qko3gB1sFJuWOj&index=2" 
functional-typescript,    christian di lorenzo, https://github.com/rcdilorenzo/news.git, 587659a2fd154ea9b8f4789b854a911b 
functional expert,        bobby priambodo, https://github.com/bobbypriambodo?tab=repositories 
functional expert,        bobby priambodo, https://medium.com/@bobbypriambodo/monads-in-functional-programming-a-practical-note-53488f94b20c 
