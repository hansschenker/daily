CSS Animations
-------------------------------------------------------------------------------
specification: 	css property value: 	animate the values of CSS properties over time, using keyframes (percent values: 0% to 100%). 
                keyframe:		The behavior of these keyframe animations can be controlled 
                                        by specifying their duration, number of repeats, and repeating behavior.


- transition: 	- from one CSS style to another. (style applied to an element attribute with a number)

- attributes:   - position, height, width, opacity,... 

- animation: 	consist of two components, 
                - a style describing the CSS animation and 
                - a set of keyframes that indicate the 
                  - start and end states of the animation's style, as well as  
                  - possible intermediate waypoints

3 advantages of Css Animations
-------------------------------------------------------------------------------
- simple: They're easy to use for simple animations; 
  you can create them without even having to know JavaScript.

- performant: The animations run well, even under moderate system load. 
  Simple animations can often perform poorly in JavaScript. 
  The rendering engine can use frame-skipping and other techniques 
  to keep the performance as smooth as possible.

- optimized: Letting the browser control the animation sequence lets the browser 
  optimize performance and efficiency by, for example, reducing the update frequency 
  of animations running in tabs that aren't currently visible.

Definition of an animation:
----------------------------
- animation (shorthand CSS) 
- shorthand for: - animation-name, 
                 - animation-duration, 
                 - animation-timing-function, 
                 - animation-delay, 
                 - animation-iteration-count, 
                 - animation-direction, 
                 - animation-fill-mode, and 
                 - animation-play-state

