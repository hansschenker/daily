Because of the the cloud - Web, Mobile is now asychronous computations

Phone is event driven - sensors, touch screen, ....

asynchoronous and event based computations are just push-based collectiions

RxJs is a library for 
-----------------------
- composing asynchronous and event based progams, asynchronous: non blocking, client and server indedpendant
  (phone:synchronous vs email:asychronous)
  modern world is getting more and more asynchronous: go shopping:sync, online shopping:async
  work: go to working place,       home office: work from home

- browser ui is single threaded: ui can be blocked

- asynch is hard: deal with errors, latency

- using observable collections:
  Enumerables are pull based: synch, server is blocking the client

- duality: inducator (parallel)      -   capacitar (serial)

- dual from Enumerable -> Observable (switching inputs and outputs, switching the arrows)

reactive environment in control (outside in to app), next data is pushed to app

interactive environment app is control, you ask app for next data, you are blocked, waiting for the nexst value

Observable interface: Producer pushes successive elements from the collectiton
you are not blocked, waiting for next value

5 samples start at 25':
---------------------------------------------------------------------------
- mouse drag and drop
- dictionary suggest, ajax request
- clock, mvc style, model (data), view (display), controller (update)
  React: v = f(model)
- Twitter polling
- Animation



