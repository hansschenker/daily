

export interface Direction {
  x: number;
  y: number;
}
console.clear();

// *** sources: ticks and keys
// tick source: emits every SPEED ms a number

// arrow keys: emits keyboard events

// *** directions from keys
// map the arrow key to a direction: +x or -x, +y or -y
// discard all other keys (only 37, 38, 39, 40)
// save previous direction and nex direction
// keep direction until it changes
// output: direction {x: +/-1 or 0, y: +/-1 or 0}


// track apples count state and change
const applesCountState$ = new BehaviorSubject(0);
// const trackApples = subject holds last value
// for state tracking in scan
type TrackState<T> = (acc: T, curr: T) => (newAcc: T, initialValue: T) => T;



// whenever the tick changes
// take the direction


// when the snakes moves we check if the snake
// has eaten an apple


// when an apple is eaten the score changes
// the apple count chaanges


// game logic is a combination of the
// snake moving and trying to eat apples


game$.subscribe((scene) => render(ctx, scene));
