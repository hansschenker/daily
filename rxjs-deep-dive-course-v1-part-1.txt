RxJs Deep Dive Course

- Instructor

Hello and Welcome
My name is Hans Schenker

I am a Typescript and Javascript Programmer
specialized in Functional and Reactive Programming 

a marathon runner and sports fan
I am excited to teach you everything 
I know about Reactive Extensions

- Course Goal

The goal is an advanced understanding of RxJs 
and the underlaying concepts

The course should help learners gain a 
comprehensive understanding of the RxJS library, 
its key concepts, and how to apply 
them effectively in real-world scenarios. 

Underlaying Concepts
- synchronous blocking pull versus asynchronous non blocking push
- functional programming
- functional reactive programming
- real-time processing 
- Introduction to RxJs, Javascript Reactive Extensions 

RxJs or is a library that allows you to write asynchronous programs using observable sequences. 

It provides a set of operators that allow you 
to easily transform, filter, and combine these sequences, 

making it easier to work with complex data streams. 
Rx is available in multiple programming languages including JavaScript, 
and the JavaScript version of Rx is called RxJs.



Reactive Programming (asynchronous non blocking)

Reactive programming is a programming paradigm that focuses 
on handling asynchronous data streams. 

In this paradigm, the program reacts to changes as they happen 
in an asynchronous non blocking way, 
instead of waiting for an event to complete 
in a synchronous blocking way.

Reactive programming relies on the concept of observables, 
which are objects that represent a stream of data over time.
 
Observables emit values over time, and these values can be 
- transformed, 
- filtered, and 
- combined with other observables using operators.

In a reactive program, the logic is expressed as a series of operations 
on the observables, which are triggered by events in the stream. 

These operations can be thought of as a pipeline, 
where data flows through each step in the pipeline 
and is transformed along the way.

Reactive programming can be used in a variety of programming languages, but it's particularly 
popular in JavaScript, where it's implemented in the RxJS library. RxJS provides a rich 
set of operators and tools for working with observables, making it easy to build reactive 
applications in JavaScript.

Reactive programming has several advantages, including 
- better scalability, 
- improved responsiveness, 
- efficient use of system resources. 

However, it can also be challenging to learn, 
as it requires a different way of thinking about programming. 

Nevertheless, mastering reactive programming can make it easier to build 
- high-performance, 
- real-time applications that can 
- handle complex data streams.