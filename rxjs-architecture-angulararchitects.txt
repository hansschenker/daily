Verwalten von Observables
--------------------------------------------------------------------
Erzeugen von Observables
Factory-Funktionen (Creation Operators)
Operatoren und Marble Diagramme
Cold vs. Hot Observables
Subjects und Multicasting
Implizites und explizites Schließen von Observables

Reaktiver Entwurf und reaktives Denken
---------------------------------------------------------------------
Die Schritte des reaktiven Entwurfs
Strukturierte Umsetzung einer reaktiven Lösung
Kombinieren von Operatoren
Fallstudie zum reaktiven Entwurf und zur Umsetzung reaktiver Lösungen
Debuggen reaktiver Lösungen

Weiterführende Szenarien und Operatoren anhand von Fallstudien
----------------------------------------------------------------------
Weiterführende Creation-Operatoren
Operatoren für Error-Handling
Operatoren für Multicasting
Operatoren für Filtering
Operatoren für Transformationen
Utility-Operatoren
Eigene Operatoren schreiben

State Management mit NGRX
----------------------------------------------------------------------
State Management mit Fassaden und RxJS
Der Redux Ansatz
Vergleich verschiedener State-Libraries wie NGRX, NGXS und Akita
Den Redux-Ansatz mit NGRX implementieren
Modellieren von Zuständen
Arbeiten mit Immutables
Actions und Action Creators
Reducer
Feature-Module und Lazy-Loading
Code mit @ngrx/schematics generieren

Mehr NGRX-Konzepte und Bibliotheken
-----------------------------------------------------------------------
Selektoren und Memorisierung
Nebeneffekte mit @ngrx/effects behandeln
Mit @ngrx/entity Entitäten verwalten
Mit @ngrx/data das Zusammenspiel zwischen NGRX und dem Backend automatisieren

Best Practices und State-Patterns
-------------------------------------------------------------------------
Komponenten-Design mit Smart und Dumb Components
Den Einsatz von Immutables mit Libraries vereinfachen
Normalisierung von Zuständen
Meta-Reducer
Persistieren von Zuständen
Zustände und Routing
Undo/Redo
Optimistic UI
Caching
State Management und Formulare, insb. Reactive Forms
