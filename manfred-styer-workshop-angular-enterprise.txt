Angular Architektur Workshop Online English, Interaktiv, Manfred Steyer
---------------------------------------------------------------------------------
Plane und entwickle skalierbare Angular Applications


Struktur für große Anwendungen: Monorepos, Nx und Strategic Design
------------------------------------------------------------------------------------
Architekturen mit Domain Driven Design (DDD) planen
CLI Workspaces und Monorepos mit Nx (Nrwl Extensions)
Wiederverwendbare npm-Pakete entwickeln und verteilen
Kategorieren für Bibliotheken, Module und Komponenten
Architekturvorgaben mit Zugriffseinschränkungen erzwingen
Buildperformance: Inkrementelle Builds und Tests und Caching
Integration in den CI-Prozess
Anpassbare Bibliotheken mit erweiterten DI-Mustern und Content Projection
Das Open/Closed-Principle in Angular

Skalierbare Architekturen: Micro Frontends mit Module Federation und Angular Elements
------------------------------------------------------------------------------------
Von Strategic Design zu Micro Frontends
Vor- und Nachteile von Micro Frontends
Mono Repos vs. multiple Repos
Webpack Module Federation zum Laden separat kompilierter und bereitgestellter Micro Frontends nutzen
Dynamisches Module Federation
Teilen von Abhängigkeiten
Umgang mit verschiedenen Versionen
Kommunikation zwischen Micro Frontends
Frameworkübergreifende Entwicklung mit Angular Elements und Web Components

State Management Patterns mit NGRX und Redux
----------------------------------------------------------------------------------------
Der State-Layer und DDD
NGRX: Wann, wann nicht und Alternativen?
Den Redux-Ansatz mit NGRX nutzen
Arten von Zustände
Building Blocks: Actions, Reducer
Selectors und View-Models
Effects und Seiteneffekte
Building-Blocks mit Schematics generieren
---------------------------------------------------------------
Entitäten mit @ngrx/entities verwalten
Praktikabler Umgang mit Immutables
Fassaden als Dreh- und Angelpunkt
NGRX schrittweise einführen
NGRX und Lazy Loading von Modulen
Lokale Zustände mit dem brandneuen NGRX/Component-Store

Performance Tuning
--------------------------------------------------------------
Lazy Loding mit und ohne Router
Data Binding Performance mit OnPush
Differential Serving
AOT und Tree Shaking
Bundles analysieren
Web Worker und die CLI
Caching mit Service Worker

Customization und White-Label-Solutions
-------------------------------------------------------------------
Kundenspezifische Anpassungen zur Laufzeit
Kundenspezifische Anpassungen zur Compiletime
Anpassungen über DI
Optionen für die Konfiguration

Moderne Security-Lösungen und Single Sign-on
-------------------------------------------------------------------
Existierende Identity-Lösungen wie Active Directory anbinden
Social Login (Login with Facebook etc.)
OAuth 2 sowie 2.1 und OpenId Connect
JSON Web Tokens (JWT)
Token Refresh
Single Sign out
Aktuelle Empfehlungen der OAuth 2 Working Group und Konsequenzen

Reaktive Architekturen mit RxJS
----------------------------------------------------------------
Reaktives Denken und reaktiver Entwurf
Chaining/ Piping von Operatoren
Combination Operators
Higher-Order Observables
Implizites und Explizites Schließen
Cold und Hot Observables sowie Multicasting
Subjects nutzen
Fehlerbehandlung
Debugging

Internationalisierung
--------------------------------------------------------------------
I18N Pipes
Übersetzungen mit dem Angular Compiler (Runtime I18N)
Übersetzungen mit ngx-translate
I18N und Eingaben

Angular Ivy: Aktuelle Möglichkeiten und die Zukunft von Angular
---------------------------------------------------------------------
Web Components mit Ivy und Angular Elements
Lazy Loading von Komponenten
Ivy und I18N
Komponenten zur Laufzeit erzeugen
Zone-less Change Detection
Higher Order Components
Eine Zukunft ohne NgModules

Higher Order Components
Eine Zukunft ohne NgModules