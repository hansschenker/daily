Standalone is a React strength:
- React's strength is its 'Component' based philosophy (just creatre a component and you have a simple app)
  Angular can not compete with this simplicity and should not.

Angular strength is to create feature rich applications (not simple apps):
-  creating a Feature with n components is Angular's strength (especially the Router with its lazy loading is the work horse for it)
  you allways create a feature with n components.
- most teacher do demos where they stuff everything in app.module - the app.module should not be touched by the user
  it is just the root of the app.
- a feature is like an app inside the Angular app, fully self content, referencing everything it needs (route config, components,      directives, ...)
- it is the google style of  using Angular: you can hook any Angular app inside the Google System and it will work, thank's to the Router!!!!
- the user should be assisted by the CLI, where the CLI always creates a feature module with rouing in place. The user should initially not be bothered with this infracture. The infrastructure is the task of the the CLI.
  To my understanding trying to go "Standalone" does not fit with the intrinsic strength and philosophy of Angular.
