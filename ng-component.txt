To build an Angular application you define a set of components, for every 
UI element, 
screen, and 
route. 

An application will always have root components (usually just one) 
that contain all other components (Component Tree)

components in Angular are self-describing
-------------------------------------------------------------------
A component knows how to interact with its host element.
A component knows how to interact with its content and view children.
A component knows how to render itself.
A component configures dependency injection.
A component has a well-defined public API of input and output properties.

All of these make components in Angular self-describing, 
so they contain all the information needed to instantiate them. 
And this is extremely important.



usage: ng generate c <name> [options]

arguments:
  schematic
    The schematic or collection:schematic to generate.
  name
    The name of the component.

options:
  --change-detection (-c)
    The change detection strategy to use in the new component.
  --defaults
    When true, disables interactive input prompts for options with a default.
  --dry-run (-d)
    When true, runs through and reports activity without writing out results.
  --entry-component
    When true, the new component is the entry component of the declaring NgModule.
  --export
    When true, the declaring NgModule exports this component.
  --flat
    When true, creates the new files at the top level of the current project.
  --force (-f)
    When true, forces overwriting of existing files.
  --help
    Shows a help message for this command in the console.
  --inline-style (-s)
    When true, includes styles inline in the component.ts file. Only CSS styles can be included inline. 
By default, an external styles file is created and referenced in the component.ts file.
  --inline-template (-t)
    When true, includes template inline in the component.ts file. By default, an external template file 
is created and referenced in the component.ts file.
  --interactive
    When false, disables interactive input prompts.
  --lint-fix
    When true, applies lint fixes after generating the component.
  --module (-m)
    The declaring NgModule.
  --prefix (-p)
    The prefix to apply to the generated component selector.
  --project
    The name of the project.
  --selector
    The HTML selector to use for this component.
  --skip-import
    When true, does not import this component into the owning NgModule.
  --skip-selector
    Specifies if the component should have a selector or not.
  --skip-tests
    When true, does not create "spec.ts" test files for the new component.
  --spec
    When true (the default), generates a  "spec.ts" test file for the new component.
  --style
    The file extension or preprocessor to use for style files.
  --styleext
    The file extension to use for style files.
  --view-encapsulation (-v)
    The view encapsulation strategy to use in the new component.