[
{
"number": 1,
"title": "What does Http stand for?",
"category": "Http",
"level": "Foundation",
"description": "",
"choices": [
{
"title": "http:80, ftp:20, smtp:25",
"description": "",
"isCorrect": "true"
},
{
"title": "http:80, ftp:23, smtp:25",
"description": "",
"isCorrect": "false"
},
{
"title": "http:80, ftp:32, smtp:20",
"description": "",
"isCorrect": "false"
},
{
"title": "http:80, ftp:79, smtp:75",
"description": "",
"isCorrect": "false"
}
]
},
{
"number": 2,
"title": "What is the format of Http?",
"category": "Http",
"level": "Foundation",
"description": "",
"choices": [
{
"title": "http:80, ftp:20, smtp:25",
"description": "",
"isCorrect": "true"
},
{
"title": "http:80, ftp:23, smtp:25",
"description": "",
"isCorrect": "false"
},
{
"title": "http:80, ftp:32, smtp:20",
"description": "",
"isCorrect": "false"
},
{
"title": "http:80, ftp:79, smtp:75",
"description": "",
"isCorrect": "false"
}
]
},
{
"number": 3,
"title": "Which default ports are right?",
"category": "Http",
"level": "Foundation",
"description": "",
"choices": [


]
},
{
"number": 4,
"title": "Whith which tool can you connect to a server?",
"category": "Http",
"level": "Foundation",
"description": "",
"choices": [
{
"title": "telnet xyz.com http/1 80",
"description": "",
"isCorrect": "false"
},
{
"title": "telnet xyz.com",
"description": "",
"isCorrect": "false"
},
{
"title": "telnet xyz.com http get",
"description": "",
"isCorrect": "false"
},
{
"title": "telnet xyz.com 80",
"description": "",
"isCorrect": "true"
}
]
},
{
"number": 5,
"title": "Why is TCP called a reliable protocol?",
"category": "Http",
"level": "Foundation",
"description": "",
"choices": [
{
"title": "It provides explicit error control on tcp packages",
"description": "",
"isCorrect": "false"
},
{
"title": "provides explicit error control on tcp and ip packages",
"description": "",
"isCorrect": "false"
},
{
"title": "It provides explicit error control on ip packages",
"description": "",
"isCorrect": "true"
},
{
"title": "provides explicit control on open connection",
"description": "",
"isCorrect": "false"
}
]
},
{
"number": 6,
"title": "Ip Protocol is called unreliable because?",
"category": "Http",
"level": "Foundation",
"description": "",
"choices": [
{
"title": "packages do not arrive in time",
"description": "",
"isCorrect": "false"
},
{
"title": "",
"description": "packages can be lost and can arrive out of order",
"isCorrect": "true"
},
{
"title": "packages are following a wrong path",
"description": "",
"isCorrect": "false"
},
{
"title": "packages are only delivered on christmas",
"description": "",
"isCorrect": "false"
}
]
},
{
"number": 7,
"title": "Why is the transport layer also called Host-to-Host layer?",
"category": "Http",
"level": "Foundation",
"description": "",
"choices": [
{
"title": "two programs running on two end hosts communicate directly communicate with each other",
"description": "",
"isCorrect": "true"
},
{
"title": "",
"description": "two hosts communicate directly with each other",
"isCorrect": "false"
},
{
"title": "there is a secure connection between the two hosts",
"description": "",
"isCorrect": "false"
},
{
"title": "the two hosts are in the same local area network",
"description": "",
"isCorrect": "false"
}
]
},
{
"number": 8,
"title": "How is the Mapping of TCP/IP protocol stack to OSI seven-layer model?",
"category": "Http",
"level": "Foundation",
"description": "",
"choices": [
{
"title": "IP -> Data Layer, TCP -> Transport, Application ->  Application",
"description": "",
"isCorrect": "false"
},
{
"title": "",
"description": "IP -> Data Layer, TCP -> Transport, Application ->  Session, Presentation",
"isCorrect": "false"
},
{
"title": "IP -> Network, TCP -> Transport, Application -> Session, Presentation, Application",
"description": "",
"isCorrect": "true"
},
{
"title": "IP -> Data Layer, TCP -> Network, Application -> Session, Presentation, Application",
"description": "",
"isCorrect": "false"
}
]
},
{
"number": 9,
"title": "What is the definition of an URI?",
"category": "Http",
"level": "Foundation",
"description": "",
"choices": [
{
"title": "It is a reference to a resource that specifies the location of a resource on a computer",
"description": "",
"isCorrect": "false"
},
{
"title": "",
"description": "It identifies the url of the base path",
"isCorrect": "false"
},
{
"title": "It defines a unique resource on the internet",
"description": "",
"isCorrect": "false"
},
{
"title": "",
"description": "It is a string of characters used to identify a name of a resource",
"isCorrect": "true"
}
]
},
{
"number": 10,
"title": "?",
"category": "Http",
"level": "Foundation",
"description": "Which is the path part of this url:  foo://example.com:8080/over/there?name=ferret#nose",
"choices": [
{
"title": "/over/there?name=ferret#nose",
"description": "",
"isCorrect": "false"
},
{
"title": "name=ferret#nose",
"description": "",
"isCorrect": "false"
},
{
"title": "/over/there",
"description": "",
"isCorrect": "true"
},
{
"title": "/over/there?name=ferret#nose",
"description": "",
"isCorrect": "false"
}
]
},
{
"number": 11,
"title": "What are the 4 main HTTP Verbs?",
"category": "Http",
"level": "Foundation",
"description": "",
"choices": [
{
"title": "GET, POST, PUT, DELETE",
"description": "",
"isCorrect": "true"
},
{
"title": "GET, POST, HEAD, DELETE ",
"description": "",
"isCorrect": "false"
},
{
"title": "GET, PUT, POST, PATCH",
"description": "",
"isCorrect": "false"
},
{
"title": "GET, POST, SEND, DELETE",
"description": "",
"isCorrect": "false"
}
]
},
{
"number": 12,
"title": "What is the effect of sending a PUT Request?",
"category": "Http",
"level": "Foundation",
"description": "",
"choices": [
{
"title": "It appends the uploaded content to the current resource",
"description": "",
"isCorrect": "false"
},
{
"title": "It uploads only the difference between the uploaded content and the current resource",
"description": "",
"isCorrect": "false"
},
{
"title": "It puts the uploaded content in the cache",
"description": "",
"isCorrect": "false"
},
{
"title": "It replaces all current representations of the target resource with the uploaded content",
"description": "",
"isCorrect": "true"
}
]
},
{
"number": 13,
"title": "Which Status Codes are correct?",
"category": "Http",
"level": "Foundation",
"description": "",
"choices": [
{
"title": "204 Created, 400 Bad Request, 403 Forbidden, 500 Internal Server Error",
"description": "",
"isCorrect": "false"
},
{
"title": "200 OK, 403 Forbidden, 404 Not Found, 500 Timeout",
"description": "",
"isCorrect": "false"
},
{
"title": "200 OK, 400 Bad Request, 404 Not Found, 500 Internal Server Error ",
"description": "",
"isCorrect": "true"
},
{
"title": "200 OK, 409 Request hold, 404 Not Found, 500 Internal Server Error",
"description": "",
"isCorrect": "false"
}
]
},
{
"number": 14,
"title": "What is the Content-Type of a simple static html page?",
"category": "Http",
"level": "Foundation",
"description": "",
"choices": [
{
"title": "Content-Type:text/html",
"description": "",
"isCorrect": "true"
},
{
"title": "Content-Type:application/html",
"description": "",
"isCorrect": "false"
},
{
"title": "Content-Type:application/text",
"description": "",
"isCorrect": "false"
},
{
"title": "Content-Type:text/xml",
"description": "",
"isCorrect": "false"
}
]
},
{
"number": 15,
"title": "What is right about the port number?",
"category": "Http",
"level": "Foundation",
"description": "",
"choices": [
{
"title": "It is a fixed number for a web application",
"description": "",
"isCorrect": "false"
},
{
"title": "It identifies an application running on the designated machine",
"description": "",
"isCorrect": "true"
},
{
"title": "The port number is optional",
"description": "",
"isCorrect": "false"
},
{
"title": "The port number can only be 4 digits long",
"description": "",
"isCorrect": "false"
}
]
},
{
"number": 16,
"title": "What does CSS stand for?",
"category": "Css",
"level": "Foundation",
"description": "",
"choices": [
{
"title": "Common Syntax Semantics",
"description": "",
"isCorrect": "false"
},
{
"title": "Certified Style Syntax",
"description": "",
"isCorrect": "false"
},
{
"title": "Cascading Style Sheets",
"description": "",
"isCorrect": "true"
},
{
"title": "Common Simple Style",
"description": "",
"isCorrect": "false"
}
]
},
{
"number": 17,
"title": "Which of the following options has the correct selector syntax?",
"category": "Css",
"level": "Foundation",
"description": "",
"choices": [
{
"title": "h1,h2,h3,h4,h5,h6, {}",
"description": "",
"isCorrect": "false"
},
{
"title": "h1,h2,h3 h4,h5,h6 {}",
"description": "",
"isCorrect": "false"
},
{
"title": "h1,h2,h3,h4,h5,h6 {}",
"description": "",
"isCorrect": "true"
},
{
"title": "h1 h2 h3 h4 h5 h6 {}",
"description": "",
"isCorrect": "false"
}
]
},
{
"number": 18,
"title": "Which of the following options uses the correctr element syntax?",
"category": "Css",
"level": "Foundation",
"description": "",
"choices": [
{
"title": "image { padding: 1em; }",
"description": "",
"isCorrect": "false"
},
{
"title": "pic { padding: 1em; }",
"description": "",
"isCorrect": "false"
},
{
"title": "img { padding: 1em; }",
"description": "",
"isCorrect": "true"
},
{
"title": "picture { padding: 1em; }",
"description": "",
"isCorrect": "false"
}
]
},
{
"number": 19,
"title": "Which of the following options uses the correct property syntax?",
"category": "Css",
"level": "Foundation",
"description": "",
"choices": [
{
"title": "p { font-color:red; }",
"description": "",
"isCorrect": "false"
},
{
"title": "p { text-color:red; }",
"description": "",
"isCorrect": "false"
},
{
"title": "p { color:red; }",
"description": "",
"isCorrect": "true"
},
{
"title": "p { text:red; }",
"description": "",
"isCorrect": "false"
}
]
},
{
"number": 20,
"title": "Which of the following options uses the correct value syntax?",
"category": "Css",
"level": "Foundation",
"description": "",
"choices": [
{
"title": "p { pading: 10 px; }",
"description": "",
"isCorrect": "false"
},
{
"title": "p { pading: 10; }",
"description": "",
"isCorrect": "false"
},
{
"title": "p { pading: 10px; }",
"description": "",
"isCorrect": "true"
},
{
"title": "p { pading: 10pxl; }",
"description": "",
"isCorrect": "false"
}
]
},
{
"number": 21,
"title": "How would you write a selector to style an element with a class 'intro'?",
"category": "Css",
"level": "Foundation",
"description": "",
"choices": [
{
"title": "#intro {}",
"description": "",
"isCorrect": "false"
},
{
"title": ":intro {}",
"description": "",
"isCorrect": "false"
},
{
"title": "",
"description": ".intro {}",
"isCorrect": "true"
},
{
"title": "intro {}",
"description": "",
"isCorrect": "false"
}
]
},
{
"number": "22",
"title": "How would you write a selector to style an element with a ID of 'main'?",
"category": "Css",
"level": "Foundation",
"description": "",
"choices": [
{
"title": ">main {}",
"description": "",
"isCorrect": "false"
},
{
"title": ".main {}",
"description": "",
"isCorrect": "false"
},
{
"title": "#main {}",
"description": "",
"isCorrect": "true"
},
{
"title": "main {}",
"description": "",
"isCorrect": "false"
}
]
},
{
"number": 23,
"title": "Hwo would you write a selector to style all elements?",
"category": "Css",
"level": "Foundation",
"description": "",
"choices": [
{
"title": "html {}",
"description": "",
"isCorrect": "false"
},
{
"title": "# {}",
"description": "",
"isCorrect": "false"
},
{
"title": "* {}",
"description": "",
"isCorrect": "true"
},
{
"title": ". {}",
"description": "",
"isCorrect": "false"
}
]
},
{
"number": 24,
"title": "How would you write a selector to style an EM element inside a P element?",
"category": "Css",
"level": "Foundation",
"description": "",
"choices": [
{
"title": "p em {}",
"description": "",
"isCorrect": "true"
},
{
"title": "p {}",
"description": "",
"isCorrect": "false"
},
{
"title": "p > em {}",
"description": "",
"isCorrect": "false"
},
{
"title": "p ~ em {}",
"description": "",
"isCorrect": "false"
}
]
},
{
"number": 25,
"title": "How would you write a selector to style an STRONG element that is a child of a DIV element?",
"category": "Css",
"level": "Foundation",
"description": "",
"choices": [
{
"title": "div strong {}",
"description": "",
"isCorrect": "false"
},
{
"title": "div strong {}",
"description": "",
"isCorrect": "false"
},
{
"title": "div {}",
"description": "",
"isCorrect": "false"
},
{
"title": "div > strong {}",
"description": "",
"isCorrect": "true"
}
]
},
{
"number":26,
"title": "Which one is the correct inline style?",
"category": "Css",
"level": "Foundation",
"description": "",
"choices": [
{
"title": "<h3 style='{color:red}'>Content here</h3>",
"description": "",
"isCorrect": "false"
},
{
"title": "<h3 style='color:red;'>Content here</h3>",
"description": "",
"isCorrect": "true"
},
{
"title": "<h3 style='color:red'>Content here</h3>",
"description": "",
"isCorrect": "false"
},
{
"title": "<h3 class='color:red'>Content here</h3>",
"description": "",
"isCorrect": "false"
}
]
},
{
"number": 27,
"title": "What are the five different parts of a CSS rule?",
"category": "Css",
"level": "Foundation",
"description": "",
"choices": [
{
"title": "selector, rule, declaration,property, value ",
"description": "",
"isCorrect": "false"
},
{
"title": "selector, rule, rule block,property, value ",
"description": "",
"isCorrect": "false"
},
{
"title": "selector, declaration block, declaration,property, value ",
"description": "",
"isCorrect": "true"
},
{
"title": "selector, declaration, rule, property, value ",
"description": "",
"isCorrect": "false"
}
]
},
{
"number": 28,
"title": "How would you write a multiple selector rule?",
"category": "Css",
"level": "Foundation",
"description": "",
"choices": [
{
"title": "h1, h2, h3, { color:red; }",
"description": "",
"isCorrect": "false"
},
{
"title": "h1, h2, h3 { color:red; }",
"description": "",
"isCorrect": "true"
},
{
"title": "h1 h2 h3 { color:red; }",
"description": "",
"isCorrect": "false"
},
{
"title": "h1 + h2, + h3 { color:red; }",
"description": "",
"isCorrect": "false"
}
]
},
{
"number": 29,
"title": "How many CSS selectors can be used in CSS?",
"category": "Css",
"level": "Foundation",
"description": "",
"choices": [
{
"title": "between 20 and 30",
"description": "",
"isCorrect": "false"
},
{
"title": "between 30 and 40",
"description": "",
"isCorrect": "false"
},
{
"title": "between 50 and 60",
"description": "",
"isCorrect": "true"
},
{
"title": "between 60 and 70",
"description": "",
"isCorrect": "false"
}
]
},
{
"number": 30,
"title": "Which ones are the Descendant selectors?",
"category": "Css",
"level": "Foundation",
"description": "",
"choices": [
{
"title": "ul li a {}",
"description": "",
"isCorrect": "true"
},
{
"title": "ul > li > a {}",
"description": "",
"isCorrect": "false"
},
{
"title": "ul < li < a {}",
"description": "",
"isCorrect": "false"
},
{
"title": "ul ~ li ~ a {}",
"description": "",
"isCorrect": "false"
}
]
},
{
"number": 31,
"title": "What does the following CSS rule select: '.nav ul {}' ?",
"category": "Css",
"level": "Foundation",
"description": "",
"choices": [
{
"title": "any ul after the nav class",
"description": "",
"isCorrect": "false"
},
{
"title": "one ul after the nav class",
"description": "",
"isCorrect": "false"
},
{
"title": "any ul inside the nav class",
"description": "",
"isCorrect": "true"
},
{
"title": "one ul inside the nav class",
"description": "",
"isCorrect": "false"
}
]
},
{
"number": 32,
"title": "which are valid values for the 'type' attribute of an <input> element?",
"category": "Html",
"level": "Foundation",
"description": "",
"choices": [
{
"title": "email, number, url, date",
"description": "",
"isCorrect": "true"
},
{
"title": "email, number, file, address",
"description": "",
"isCorrect": "false"
},
{
"title": "email, number, file, path",
"description": "",
"isCorrect": "false"
},
{
"title": "email, number, time, character",
"description": "",
"isCorrect": "false"
}
]
},
{
"number": 33,
"title": "Which attribute do you use to specify an initial value for a radio button?",
"category": "Html",
"level": "Foundation",
"description": "",
"choices": [
{
"title": "checked=true",
"description": "",
"isCorrect": "false"
},
{
"title": "selected=selected",
"description": "",
"isCorrect": "false"
},
{
"title": "selected=true",
"description": "",
"isCorrect": "false"
},
{
"title": "",
"description": "checked=checked",
"isCorrect": "true"
}
]
},
{
"number": 34,
"title": "How much local storage space per origin is recommended by the W3C?",
"category": "Html",
"level": "Foundation",
"description": "",
"choices": [
{
"title": "500 Kb",
"description": "",
"isCorrect": "false"
},
{
"title": "10 Mb",
"description": "",
"isCorrect": "false"
},
{
"title": "5 Mb",
"description": "",
"isCorrect": "true"
},
{
"title": "1 Mb",
"description": "",
"isCorrect": "false"
}
]
},
{
"number": 35,
"title": "What is the mime type for a manifest file?",
"category": "Html",
"level": "Foundation",
"description": "",
"choices": [
{
"title": "text/cache",
"description": "",
"isCorrect": "false"
},
{
"title": "text/manifest",
"description": "",
"isCorrect": "false"
},
{
"title": "text/cache-manifest",
"description": "",
"isCorrect": "true"
},
{
"title": "text/app-manifest",
"description": "",
"isCorrect": "false"
}
]
},
{
"number": 36,
"title": "What is the mime type of index.html?",
"category": "Html",
"level": "Foundation",
"description": "",
"choices": [
{
"title": "text/http",
"description": "",
"isCorrect": "false"
},
{
"title": "text/html",
"description": "",
"isCorrect": "true"
},
{
"title": "html/file",
"description": "",
"isCorrect": "false"
},
{
"title": "html/text",
"description": "",
"isCorrect": "false"
}
]
},
{
"number": 37,
"title": "What is the Content-Type of an web request with a json response?",
"category": "Html",
"level": "Foundation",
"description": "",
"choices": [
{
"title": "text/json",
"description": "",
"isCorrect": "false"
},
{
"title": ":text/javascript",
"description": "",
"isCorrect": "false"
},
{
"title": "application/json",
"description": "",
"isCorrect": "true"
},
{
"title": "application/text",
"description": "",
"isCorrect": "false"
}
]
},
{
"number": "38",
"title": "What do you pass as the first argument to querySelectorAll?",
"category": "Html",
"level": "Foundation",
"description": "",
"choices": [
{
"title": "object selector",
"description": "",
"isCorrect": "false"
},
{
"title": "DOM selector",
"description": "",
"isCorrect": "false"
},
{
"title": "CSS3 selector",
"description": "",
"isCorrect": "true"
},
{
"title": "XML Selector",
"description": "",
"isCorrect": "false"
}
]
},
{
"number": 39,
"title": "What selection method would you use to create a 'live' selection of elements?",
"category": "Html",
"level": "Foundation",
"description": "",
"choices": [
{
"title": "querySelectorAll",
"description": "",
"isCorrect": "true"
},
{
"title": "query",
"description": "",
"isCorrect": "false"
},
{
"title": "querySelector",
"description": "",
"isCorrect": "false"
},
{
"title": "queryDOMElements",
"description": "",
"isCorrect": "false"
}
]
},
{
"number": 40,
"title": "Which are semantic HTML5 elements?",
"category": "Html",
"level": "Foundation",
"description": "",
"choices": [
{
"title": "<article> <aside> <nav> <main> <form>",
"description": "",
"isCorrect": "true"
},
{
"title": "<article> <aside> <nav> <main> <div>",
"description": "",
"isCorrect": "false"
},
{
"title": "<article> <aside> <footer> <main> <div>",
"description": "",
"isCorrect": "false"
},
{
"title": "<article> <aside> <header> <main> <div>",
"description": "",
"isCorrect": "false"
}
]
},
{
"number": 41,
"title": "Script tags should be inserted at the end of the source code because:",
"category": "Html",
"level": "Foundation",
"description": "",
"choices": [
{
"title": "Script tags cannot exist in the head tag",
"description": "",
"isCorrect": "false"
},
{
"title": "Script tags can only be used before the closing body tag",
"description": "",
"isCorrect": "false"
},
{
"title": "Script tags in the head tag are not run",
"description": "",
"isCorrect": "false"
},
{
"title": "Script tags at the top of the page can freeze the page load",
"description": "",
"isCorrect": "true"
}
]
},
{
"number": 42,
"title": "Header and Footer tags",
"category": "Html",
"level": "Foundation",
"description": "",
"choices": [
{
"title": "can only be used once in the page",
"description": "",
"isCorrect": "false"
},
{
"title": "are specialized sections which can be used in a <section> or in <article>",
"description": "",
"isCorrect": "true"
},
{
"title": "are specialized sections which can not be used in <article> or <section>",
"description": "",
"isCorrect": "false"
},
{
"title": "are specialized sections which can only used before or after the <body> element",
"description": "",
"isCorrect": "false"
}
]
},
{
"number": 43,
"title": "To create a table we",
"category": "Html",
"level": "Foundation",
"description": "",
"choices": [
{
"title": "Create table columns and then create table rows",
"description": "",
"isCorrect": "false"
},
{
"title": "Create table heading and then table columns",
"description": "",
"isCorrect": "false"
},
{
"title": "Create table heading and the table footer",
"description": "",
"isCorrect": "false"
},
{
"title": "Create table rows and then create table columns",
"description": "",
"isCorrect": "true"
}
]
},
{
"number": 44,
"title": "Table tags can be used in semantic HTML for",
"category": "Html",
"level": "Foundation",
"description": "",
"choices": [
{
"title": "For separating multple sections in the page",
"description": "",
"isCorrect": "false"
},
{
"title": "Creating a content area with different rows",
"description": "",
"isCorrect": "false"
},
{
"title": "Creating a layouut with 3 columns",
"description": "",
"isCorrect": "false"
},
{
"title": "Presenting tabular like data like calendars or spreadsheets",
"description": "",
"isCorrect": "true"
}
]
},
{
"number": 45,
"title": "Choose the correct HTML code",
"category": "Html",
"level": "Foundation",
"description": "",
"choices": [
{
"title": "<div><span>Content</span></div>",
"description": "",
"isCorrect": "true"
},
{
"title": "<span>div>Content</div></span>",
"description": "",
"isCorrect": "false"
},
{
"title": "<i>div>Content</div></i>",
"description": "",
"isCorrect": "false"
},
{
"title": "<em>div>Content</div></em>",
"description": "",
"isCorrect": "false"
}
]
},
{
"number": 46,
"title": "A 'dummy' link, <a href='#'></a>, when clicked",
"category": "Html",
"level": "Foundation",
"description": "",
"choices": [
{
"title": "Goes to the top of the page",
"description": "",
"isCorrect": "true"
},
{
"title": "Does nothing",
"description": "",
"isCorrect": "false"
},
{
"title": "Takes the user to an blank page",
"description": "",
"isCorrect": "false"
},
{
"title": "Causes a script error",
"description": "",
"isCorrect": "false"
}
]
},
{
"number": 47,
"title": "The <hr> tag means ",
"category": "Html",
"level": "Foundation",
"description": "",
"choices": [
{
"title": "A horizontal line across the page",
"description": "",
"isCorrect": "false"
},
{
"title": "A separation of <header> content and <main> content",
"description": "",
"isCorrect": "false"
},
{
"title": "A thematic-level break inside the content",
"description": "",
"isCorrect": "true"
},
{
"title": "Emphasis the meaning of the line above the <hr> tag",
"description": "",
"isCorrect": "false"
}
]
},
{
"number": 48,
"title": "Which of the following will create a copy of an array such that changes to the old array will not be reflected in the new array?",
"category": "Javascript",
"level": "Foundation",
"description": "",
"choices": [
{
"title": "var newArray = oldArray;",
"description": "",
"isCorrect": "false"
},
{
"title": "var newArray = new Array(oldArray);",
"description": "",
"isCorrect": "false"
},
{
"title": "e",
"description": "var newArray = oldArray.slice(0);",
"isCorrect": "true"
},
{
"title": "var newArray = [oldArray];",
"description": "",
"isCorrect": "false"
}
]
},
{
"number": 49,
"title": "What will console.log(typeof([1,2]) print out??",
"category": "Javascript",
"level": "Foundation",
"description": "",
"choices": [
{
"title": "array",
"description": "",
"isCorrect": "false"
},
{
"title": "string",
"description": "",
"isCorrect": "false"
},
{
"title": "number",
"description": "",
"isCorrect": "false"
},
{
"title": "",
"description": "object",
"isCorrect": "true"
}
]
},
{
"number": 50,
"title": "Which of these return a valid instance of the Date object?",
"category": "Javascript",
"level": "Foundation",
"description": "",
"choices": [
{
"title": "var x = new Date('');",
"description": "",
"isCorrect": "false"
},
{
"title": "var x = Date.now();",
"description": "",
"isCorrect": "false"
},
{
"title": "var x = new Date();",
"description": "",
"isCorrect": "true"
},
{
"title": "var x = Date.today();",
"description": "",
"isCorrect": "false"
}
]
},
{
"number": 51,
"title": "var x = typeof new String('123'); - What is the type of x?",
"category": "Javascript",
"level": "Foundation",
"description": "",
"choices": [
{
"title": "string",
"description": "",
"isCorrect": "false"
},
{
"title": "null",
"description": "",
"isCorrect": "false"
},
{
"title": "object",
"description": "",
"isCorrect": "true"
},
{
"title": "text/app-manifest",
"description": "number",
"isCorrect": "false"
}
]
},
{
"number": 52,
"title": "What is the correct syntax for creating a Date object for January 10, 1998?",
"category": "Javascript",
"level": "Foundation",
"description": "",
"choices": [
{
"title": "new Date(1998, 1, 10)",
"description": "",
"isCorrect": "false"
},
{
"title": "new Date(1998, 0, 10)",
"description": "",
"isCorrect": "true"
},
{
"title": "new Date(1, 10, 1998)",
"description": "",
"isCorrect": "false"
},
{
"title": "new Date(0, 10,1998)",
"description": "",
"isCorrect": "false"
}
]
},
{
"number": 53,
"title": "Which standard Javascript method would truncate Math.PI to 3.14?",
"category": "Javascript",
"level": "Foundation",
"description": "",
"choices": [
{
"title": "Math.round(Math.PI)",
"description": "",
"isCorrect": "false"
},
{
"title": "Math.PI.toString('02')",
"description": "",
"isCorrect": "false"
},
{
"title": "Math.PI.toFixed(2)",
"description": "",
"isCorrect": "true"
},
{
"title": "Math.PI.toPrecision(2)",
"description": "",
"isCorrect": "false"
}
]
},
{
"number": "54",
"title": "Which symbol is not used in logical operations?",
"category": "Javascript",
"level": "Foundation",
"description": "",
"choices": [
{
"title": "%",
"description": "",
"isCorrect": "true"
},
{
"title": "!",
"description": "",
"isCorrect": "false"
},
{
"title": "||",
"description": "",
"isCorrect": "false"
},
{
"title": "&&",
"description": "",
"isCorrect": "false"
}
]
},
{
"number": 55,
"title": "Which are important programming paradigms for Javascript?",
"category": "Javascript",
"level": "Foundation",
"description": "",
"choices": [
{
"title": "dynamic, functionaly, weakly-typed",
"description": "",
"isCorrect": "true"
},
{
"title": "dynamic, functional, statical typed",
"description": "",
"isCorrect": "false"
},
{
"title": "dynamic, object oriented, weakly-typed",
"description": "",
"isCorrect": "false"
},
{
"title": "dynamic, functional, object oriented",
"description": "",
"isCorrect": "false"
}
]
},
{
"number": 56,
"title": "What is functional programming?",
"category": "Javascript",
"level": "Foundation",
"description": "",
"choices": [
{
"title": "first class functions, function composition, no side effects",
"description": "",
"isCorrect": "true"
},
{
"title": "function composition, prototypal inheritance, pure functions",
"description": "",
"isCorrect": "false"
},
{
"title": "first class functions, global state, function composition",
"description": "",
"isCorrect": "false"
},
{
"title": "function composition, static members, first class functions",
"description": "",
"isCorrect": "false"
}
]
},
{
"number": 57,
"title": "What is the default value returned by a function without explicit return",
"category": "Javascript",
"level": "Foundation",
"description": "",
"choices": [
{
"title": "null",
"description": "",
"isCorrect": "false"
},
{
"title": "The value of the last statement in the function",
"description": "",
"isCorrect": "false"
},
{
"title": "The value of the first variable defined in the function",
"description": "",
"isCorrect": "false"
},
{
"title": "undefined",
"description": "",
"isCorrect": "true"
}
]
},
{
"number": 58,
"title": "What types of variales may be passed to a function?",
"category": "Javascript",
"level": "Foundation",
"description": "",
"choices": [
{
"title": "Reference types",
"description": "",
"isCorrect": "false"
},
{
"title": "Primitive types, Reference types",
"description": "",
"isCorrect": "true"
},
{
"title": "Primitive Types",
"description": "",
"isCorrect": "false"
},
{
"title": "Primitive Types, not null Types",
"description": "",
"isCorrect": "false"
}
]
},
{
"number": 59,
"title": "What is the value of result in this code: var sayHi = function(){ return 'Hi'}; var result = sayHi;",
"category": "Javascript",
"level": "Foundation",
"description": "",
"choices": [
{
"title": "null",
"description": "",
"isCorrect": "false"
},
{
"title": "the String 'Hi' ",
"description": "",
"isCorrect": "false"
},
{
"title": "undefined",
"description": "",
"isCorrect": "false"
},
{
"title": "The full code of the function assigned to sayHi",
"description": "",
"isCorrect": "true"
}
]
},
{
"number":60,
"title": "What is the value of result in this code: var sayHi = function(){ return 'Hi'; return word}; var result = word;",
"category": "Javascript",
"level": "Foundation",
"description": "",
"choices": [
{
"title": "The console would show the String 'Hi' ",
"description": "",
"isCorrect": "false"
},
{
"title": "Result would be set to undefined",
"description": "",
"isCorrect": "false"
},
{
"title": "Result would be set to null",
"description": "",
"isCorrect": "false"
},
{
"title": "An error condition",
"description": "",
"isCorrect": "true"
}
]
},
{
"number": 61,
"title": "What set of characters is used to group statements in Javascript?",
"category": "Javascript",
"level": "Foundation",
"description": "",
"choices": [
{
"title": "{}",
"description": "",
"isCorrect": "true"
},
{
"title": "()",
"description": "",
"isCorrect": "false"
},
{
"title": "[]",
"description": "",
"isCorrect": "false"
},
{
"title": "' '",
"description": "",
"isCorrect": "false"
}
]
},
{
"number": 62,
"title": "A 'dummy' link, <a hr",
"category": "Javascript",
"level": "Foundation",
"description": "",
"choices": [
{
"title": "Go",
"description": "",
"isCorrect": "true"
},
{
"title": "Does nothing",
"description": "",
"isCorrect": "false"
},
{
"title": "Takes ",
"description": "",
"isCorrect": "false"
},
{
"title": "Causes a script error",
"description": "",
"isCorrect": "false"
}
]
},
{
"number": 63,
"title": "An if condition control flow is based on a",
"category": "Javascript",
"level": "Foundation",
"description": "",
"choices": [
{
"title": "Truthy value",
"description": "",
"isCorrect": "false"
},
{
"title": "Falsy value",
"description": "",
"isCorrect": "false"
},
{
"title": "boolean value",
"description": "",
"isCorrect": "true"
},
{
"title": "number value",
"description": "",
"isCorrect": "false"
}
]
}
]