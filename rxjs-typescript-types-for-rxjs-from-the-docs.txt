simple Observables
--------------------------------------------------------------
map		map<T, R>(value: T) => R
filter		filter<T>(value: T) => boolean
                // V value type, A acc type, S seed type

scan		scan<V, A, S>(acc: V | A | S, value: V) => A, seed?: S): OperatorFunction<V, V | A>
                             --------------------------------
                             reducer function
reduce

combination
----------------------------------------------------------------
zip
combineLatest
withLatestFrom


distinct
distinctUntilChanged
distinctUntilChangedKey


share
shareReplay


higher Order Observables
---------------------------------------------------------------
merge
mergeAll
mergeMap

swich
switchAll
switchMap

concat
concatAll
concatMap

exhaust
exhaustAll
exhaustMap

