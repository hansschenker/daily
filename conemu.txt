# directories
alias mdcd=alias md $* && cd $*
alias mdcd=md $* && cd $*
alias dirp= dir $** / p 

# navigate
alias cb=cd..
alias cbb=cd.. && cd.. 

# files
alias np=notepad $*
alias tf=type $*
alias tt=type tasks.txt 
alias up=${1^^} 
alias la= ls -al
alias dirt=alias dir $* *.txt

#type file content
alias t= type $*
alias td= type daily.txt
alias tp=type package.json
alias nuance="C:\Program Files (x86)\Nuance\Power PDF 21\bin\nuancepdf.exe"
 

#daily
alias ecd= echo $* >> daily.txt 
alias cwd=cd C:\Users\HS\Web\Daily
 
 
#vs code
alias vc= code .
alias vcr=code . -r
 
 
# notepad
alias np=notepad.exe $*
alias npd=notepad.exe daily.txt

 
 
#angular cli
alias ngmini=ng new $*  --minimal --strict --skip-tests --style scss --routing false --prefix hs
alias ngws=ng new $* --create-application false --strict --style scss --routing --minimal --skip-tests
 

# hans schematics
alias ngf=schematics nxp-feature:nxp-feature --name $*
schematics nxp-feature:nxp-feature {singular name} --name tes
 
 
# angular
alias ngws=ng new $* --create-application=false directory=$*-ws
alias ngap=ng g application $* --routing --style scss --skip-tests --prefix nxp
alias ngo=ng serve -o
alias ngn=ng new $* --routing --style scss --prefix hs && dir && cd $* && ng g c home && ng g c path-not-found && cd $* && code . && ng serve -o
alias ngnm=ng new $* --routing --style scss --strict --prefix hs --minimal --skipTests false && dir && cd $* && code . && ng serve -o
 
# angular module
alias ngc=ng g c $*
alias ngm=ng g m $*s --export $* -m app && ng g c $*s && ng g c $*s/components/$*-list --prefix="" -m=$*s && ng g pipe $*s/components/$*-filter  && ng g c $*s/components/$*-add -m=$*s/$*s && ng g c $*s/components/$*-form --prefix="" -m=$*s/$*s && ng g c $*s/components/$*-item --prefix="" -m=$*s/$*s && ng g s $*s/$*  && touch src/app/$*s/$*s.json && echo { "$*s": [{ "id": "1", "name": "$*": "1" },{ "id": "2", "name": "$* 2" },{ "id": "3", "name": "$* 3" }] } >>  src/assets/$*s.json
alias ngma=ng g m auth --routing && ng g c auth -m=auth && ng g c auth/components/signin -m=auth && ng g c auth/components/signup -m=auth && ng g s auth/auth && ng g guard auth/auth
 
# ngrx
alias ngrxi=npm install @ngrx/schematics --save-dev && ng config cli.defaultCollection @ngrx/schematics
 
alias ngrxsms = ng g store AppState --root --module app.module.ts
alias ngrxsme = ng g effect App --root --module app.module.ts
 
# ngrx feature and selectors
alias ngrxf = ng g feature $*s/state/$* -m $*s/$*s --reducers ../../reducers/index.ts 
alias ngrxfs = echo "import { createFeatureSelector, createSelector } from "@ngrx/store"; import * as from$* from "./$*.reducer"; export const select$*State = createFeatureSelector<from$*.State>("$*"); export const getSelected$*Id = (state: from$*.State) => state.selected$*Id; export const select$*Ids = createSelector(select$*State,from$*.select$*Ids); export const select$*Entities = createSelector(select$*State,from$*.select$*Entities);export const selectAll$*s = createSelector(select$*State,from$*.selectAll$*s); export const select$*Total = createSelector(select$*State,from$*.select$*Total); export const selectCurrent$*Id = createSelector(select$*State,from$*.getSelected$*Id);export const selectCurrent$* = createSelector(select$*Entities,selectCurrent$*Id,(entities, id) => entities[id]);" >> $s*/state/$*.selector.ts
 
 
# http server
alias hso= hs -o -p 4444
 
# npm
alias ni=npm install
# install
alias nist=npm install && npm start
alias nis=npm install -S $*
alias nid=npm install -D $*
# scripts
alias ns=npm start
alias nr=npm run $*
alias nrb=npm run build
alias nrt=npm run test 

 
# git
alias gitgo=git add . && git commit -m "new stuff" && git push && git status
# commit
alias ga=git add .
alias gcm=git commit -m $*
alias gp=git push -u
# clone
alias gc=git clone $*
# status
alias gs=git status
alias glg=git log --graph --oneline
 
 
# ngrx install
alias ngrxi= npm install -S @ngrx/core  @ngrx/store @ngrx/effects @ngrx/router-store @ngrx/entity @ngrx/store-devtools && npm i -D @ngrx/schematics && ng config cli.defaultCollection @ngrx/schematics && ng g --help
 
# root store and entities
alias ngrxsmi=ng g store AppState --root --state-path=app-store --state-interface=AppState -m=app && ng g effect app --root -m=app 
 
# create feature
alias ngrxsmf=ng generate feature $* -m $*s/$*s --reducers ../store/index.ts
 
 
# entity
alias ngrxsme=ng generate entity $*s/entity/$*s/entity/$* -m ../$* --reducers ../../store/index.ts
 
# firebase
alias fbi=npm install firebase @angular/fire --save
 
