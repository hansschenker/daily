Lexical this - arrow function creates lexical this (captures context of this)
-------------
const log = (message:string) => console.log(message)

Type Creation
-------------------------------------------------------------------------
By combining various type operators, we can express complex operations 
and values in a succinct, maintainable way.

express a new type in terms of an existing type or value.

Generics 		- Types which take parameters

Keyof Type Operator 	- Using the keyof operator to create new types

Typeof Type Operator 	- Using the typeof operator to create new types

Indexed Access Types 	- Using Type['a'] syntax to access a subset of a type

Conditional Types 	- Types which act like if statements in the type system

Mapped Types 		- Creating types by mapping each property in an existing type

Template Literal Types 	- Mapped types which change properties 
                          via template literal strings

Type Composition 
------------------------------------------------------------------------


Type Narrowing
------------------------------------------------------------------------

Type Guarding
------------------------------------------------------------------------

Type Asserting
------------------------------------------------------------------------


with Union and Intersection type operator
union type operator
----------------------
- used in simple types  - narrow type with typeof === "string"
- used with object type - narrow type: animal isAnimal -> custom Assertion
