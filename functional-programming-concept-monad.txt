Monads

Monads enable pure functional programmers to implement 
- mutation, 
- state, 
- I/O, and a plethora of other things that are not functions

They don’t prohibit sharing or side effects but let you control them. 
And, since the control is exercised through the type system, 
a program that uses monads can be checked for correctness by the compiler

The Observable monad, has built-in logic that allows you to thread together 
a sequence of asynchronous computations as if you we’re mapping regular synchronous functions

Observables using RxJS. This monad not only allows you to perform regular IO as I did previously, 
but also asynchronous IO, as it makes the notion of time a first-class citizen — 
this is that “extra behavior” I referred to earlier

